
# start new session if none available when doing tmux a
#new-session

## misc
# set is shorter for set-option

set -g mode-mouse on

set -g default-command bash
#set -g bell-action none

# start window indexing at one instead of zero
set -g base-index 1
set -g history-limit 10000000

set-option -g set-titles on

# window number, program name, is active
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

### appearance

set-window-option -g window-status-attr bright
set -g default-terminal "screen-256color"
#set -g display-time 3000
set -g status-bg '#2e3436'
#set -g status-fg '#8ae234'
#set -g status-fg '#fce94f'
set -g status-fg '#edd400'
set -g status-left ''
set -g status-right '#[fg=white]#S-#H'

# for annoying thing with window sizes
setw -g aggressive-resize on

#set-window-option -g window-status-current-attr bright,reverse
set-window-option -g window-status-current-attr reverse
#set-window-option -g window-status-current-bg cyan
#set-window-option -g window-status-current-fg black

## environment

# variables to inherit. mostly ros stuff. turns out to not work.
#set -ga update-environment ' PATH CPATH PYTHONPATH PKG_CONFIG_PATH CMAKE_PREFIX_PATH LD_LIBRARY_PATH ROS_ROOT ROS_PACKAGE_PATH ROS_MASTER_URI ROS_PARALLEL_JOBS ROSLISP_PACKAGE_DIRECTORIES ROS_DISTRO ROS_ETC_DIR'

## bindings
unbind C-b
set -g prefix `
bind-key ` send-prefix

# split windows like vim
# but first bind S to choose-session (used to be s)
bind S choose-session
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind + resize-pane -D 1
bind - resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
#setw -g mode-keys vi

unbind A
bind A command-prompt "rename-window %%"

unbind q
bind q confirm-before "kill-window"

# alternate
bind a last-window

unbind L # last session
# move window left and right
bind H swap-window -t -1
bind L swap-window -t +1

# reminder: ! to break pane (to window)

